name: Build and Release Avalonia App

on:
  push:
    branches: 
      - refactor
#    tags:
#      - 'v*.*.*'  # Triggers only on version tags, e.g., v1.0.0

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        include:
          - os: macos-latest
            arch: arm64
          - os: ubuntu-latest
            arch: x64
          - os: windows-latest
            arch: x64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release

      - name: Publish and zip project
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            dotnet publish -c Release -r linux-x64 --self-contained
            zip -r OpenIPC-Config-ubuntu-latest-x64.zip ./bin/Release/net8.0/linux-x64/
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            dotnet publish -c Release -r win-x64 --self-contained
            powershell -Command "Compress-Archive -Path .\bin\Release\net8.0\win-x64\* -DestinationPath OpenIPC-Config-windows-latest-x64.zip"
          else
            dotnet publish -c Release -r osx-arm64 --self-contained
            zip -r OpenIPC-Config-macos-latest-arm64.zip ./bin/Release/net8.0/osx-arm64/
          fi
        shell: bash

      - name: Upload build artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: OpenIPC-Config-ubuntu-latest-x64
          path: OpenIPC-Config-ubuntu-latest-x64.zip

      - name: Upload build artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: OpenIPC-Config-windows-latest-x64
          path: OpenIPC-Config-windows-latest-x64.zip

      - name: Upload build artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: OpenIPC-Config-macos-latest-arm64
          path: OpenIPC-Config-macos-latest-arm64.zip

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: OpenIPC-Config-macos-latest-arm64
          path: .  # Downloads to current directory for easier access

      - name: Download Ubuntu artifact
        uses: actions/download-artifact@v3
        with:
          name: OpenIPC-Config-ubuntu-latest-x64
          path: .

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: OpenIPC-Config-windows-latest-x64
          path: .

      - name: List dir
        run: ls -alR /home/runner/work/OpenIPC-Config/OpenIPC-Config 
        
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: "v1.0.0-${{ github.run_number }}"
          release_name: "OpenIPC Configurator Build #${{ github.run_number }}"
          #tag_name: ${{ github.ref_name }}
          #release_name: "Avalonia App v${{ github.ref_name }}"
          draft: false
          prerelease: false

      - name: Upload macOS asset to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: 'OpenIPC-Config-macos-latest-arm64.zip'
          asset_name: "OpenIPC-macos-arm64.zip"
          asset_content_type: application/zip

      - name: Upload Ubuntu asset to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: 'OpenIPC-Config-ubuntu-latest-x64.zip'
          asset_name: "OpenIPC-ubuntu-x64.zip"
          asset_content_type: application/zip

      - name: Upload Windows asset to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: 'OpenIPC-Config-windows-latest-x64.zip'
          asset_name: "OpenIPC-windows-x64.zip"
          asset_content_type: application/zip
