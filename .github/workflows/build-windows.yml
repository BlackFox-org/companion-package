name: Build Windows OpenIPC Config Avalonia App

on:
  workflow_dispatch:
  push:
    branches:
      - test-actions

jobs:
  build:
    name: Build and Package for Windows
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [win-x64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.404'

      - name: Ensure Chocolatey is installed
        shell: pwsh
        run: |
          if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
            Set-ExecutionPolicy Bypass -Scope Process -Force;
            iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'));
          }

      - name: Install rcedit
        run: choco install rcedit -y

      - name: Restore dependencies
        run: dotnet restore OpenIPC_Config.Desktop/OpenIPC_Config.Desktop.csproj --verbosity detailed

      - name: Build project
        run: dotnet publish OpenIPC_Config.Desktop/OpenIPC_Config.Desktop.csproj -c Release -r ${{ matrix.arch }} --self-contained

      - name: List output directory
        run: dir "OpenIPC_Config.Desktop\bin\Release\net8.0\win-x64\publish"

      - name: Set Windows Icon
        run: |
          rcedit "OpenIPC_Config.Desktop\bin\Release\net8.0\win-x64\publish\OpenIPC_Config.Desktop.exe" --set-icon "Assets\OpenIPC.ico"
        shell: cmd

      - name: Create Distribution Folder
        run: |
          if (Test-Path dist) { Remove-Item -Recurse -Force dist }
          mkdir dist
        shell: pwsh

      - name: Zip Windows App
        run: |
          Compress-Archive -Path "OpenIPC_Config.Desktop\bin\Release\net8.0\win-x64\publish\*" -DestinationPath "dist\OpenIPC-Config-win-x64.zip"

        shell: pwsh

      - name: Upload Windows App Artifact
        uses: actions/upload-artifact@v3
        with:
          name: OpenIPC-Config-win-x64
          path: dist\OpenIPC-Config-win-x64.zip
